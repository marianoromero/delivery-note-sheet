{"version":3,"file":"static/js/257.705fbc82.chunk.js","mappings":"0GAAA,IAAIA,EAAU,eAWdC,EAAOC,QAVP,SAAqBC,EAAGC,GACtB,GAAI,UAAYJ,EAAQG,KAAOA,EAAG,OAAOA,EACzC,IAAIE,EAAIF,EAAEG,OAAOC,aACjB,QAAI,IAAWF,EAAG,CAChB,IAAIG,EAAIH,EAAEI,KAAKN,EAAGC,GAAK,WACvB,GAAI,UAAYJ,EAAQQ,GAAI,OAAOA,EACnC,MAAM,IAAIE,UAAU,+CACtB,CACA,OAAQ,WAAaN,EAAIO,OAASC,QAAQT,EAC5C,EAC8BF,EAAOC,QAAQW,YAAa,EAAMZ,EAAOC,QAAiB,QAAID,EAAOC,O,sBCyGnGD,EAAOC,QAAU,CACfY,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,SAAU,WACVC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,QAAS,UACTC,QAAS,UACTC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,QAAS,UACTC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,QAAS,UACTC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,QAAS,UACTC,IAAK,MACLC,IAAK,MACLC,SAAU,WACVC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,IAAK,MACLC,SAAU,WACVC,IAAK,MACLC,IAAK,M,0EC1NM,IAAAC,EAAAC,EAAAA,KAAAA,QAEb,MAAMC,EAAUD,EAAAA,KAAAA,GACVE,EAAiBF,EAAQ,KAK/BpH,EAAOC,QAAOkH,EAAAA,EAAA,GACTG,GAAc,IACjBC,WAAY,8CAAFC,OAAgDH,EAAO,wB,6BCRnE,MAAMI,EAAeL,EAAQ,KAkB7BpH,EAAOC,QAAU,CACfyH,UAjBgBC,MAAOC,EAAOC,EAAOC,KACrC,MAAMC,QAAeN,EAAaI,EAAO,EAAGC,GAC5C,OAAOC,EAAOL,UAAUE,GACrBI,QAAQL,gBACDI,EAAOE,eAcjBC,OAVaP,MAAOC,EAAOE,KAC3B,MAAMC,QAAeN,EAAa,MAAO,EAAGK,GAC5C,OAAOC,EAAOG,OAAON,GAClBI,QAAQL,gBACDI,EAAOE,e,uBCdnBjI,EAAOC,QAAU,CAAC8H,EAAQI,KACxBJ,EAAOK,UAAYC,IAAc,IAAb,KAAEC,GAAMD,EAC1BF,EAAQG,I,uBCKZ,MAAMC,EAAsBC,GAC1B,IAAIC,QAAQ,CAACC,EAASC,KACpB,MAAMC,EAAa,IAAIC,WACvBD,EAAWE,OAAS,KAClBJ,EAAQE,EAAWG,SAErBH,EAAWI,QAAUX,IAAqC,IAAlCY,QAAUC,OAAO,KAAEC,KAAUd,EACnDM,EAAOS,MAAM,gCAAD5B,OAAiC2B,MAE/CP,EAAWS,kBAAkBb,KAW3Bc,EAAY3B,UAChB,IAAIW,EAAOV,EACX,GAAqB,qBAAVA,EACT,MAAO,YAGT,GAAqB,kBAAVA,EAET,GAAI,yCAAyC2B,KAAK3B,GAChDU,EAAOkB,KAAK5B,EAAM6B,MAAM,KAAK,IAC1BA,MAAM,IACNC,IAAKC,GAAMA,EAAEC,WAAW,QACtB,CACL,MAAMC,QAAaC,MAAMlC,GACzBU,QAAauB,EAAKE,aACpB,MACK,GAA2B,qBAAhBC,aAA+BpC,aAAiBoC,YAC1C,QAAlBpC,EAAMqC,UACR3B,QAAagB,EAAU1B,EAAMsC,MAET,UAAlBtC,EAAMqC,UACR3B,QAAagB,EAAU1B,EAAMuC,SAET,WAAlBvC,EAAMqC,eACF,IAAIxB,QAASC,IACjBd,EAAMwC,OAAOzC,UACXW,QAAaC,EAAmBC,GAChCE,aAID,GAA+B,qBAApB2B,iBAAmCzC,aAAiByC,gBAAiB,CACrF,MAAM7B,QAAaZ,EAAM0C,gBACzBhC,QAAaC,EAAmBC,EAClC,MAAWZ,aAAiB2C,MAAQ3C,aAAiB4C,QACnDlC,QAAaC,EAAmBX,IAGlC,OAAO,IAAI6C,WAAWnC,IAGxBtI,EAAOC,QAAUqJ,C,6BCpEjB,IAAAnC,EAAAC,EAAAA,KAAAA,QAUA,MAAMsD,EAAkBtD,EAAQ,KAC1BK,EAAeL,EAAQ,KACvBuD,EAAYvD,EAAQ,KACpBwD,EAAYxD,EAAQ,IACpByD,EAAMzD,EAAQ,KACd0D,EAAM1D,EAAQ,MACd,WAAE2D,GAAe3D,EAAQ,KAE/BpH,EAAOC,QAAOkH,EAAA,CACZyD,YACAC,MACAC,MACAJ,kBACAjD,eACAsD,cACGJ,E,uBClBL3K,EAAOC,QAAUoI,IAAmC,IAC9CN,GADY,WAAER,EAAU,cAAEyD,GAAe3C,EAE7C,GAAImC,MAAQS,KAAOD,EAAe,CAChC,MAAMxC,EAAO,IAAIgC,KAAK,CAAC,kBAADhD,OAAmBD,EAAU,QAAQ,CACzD2D,KAAM,2BAERnD,EAAS,IAAIoD,OAAOF,IAAIG,gBAAgB5C,GAC1C,MACET,EAAS,IAAIoD,OAAO5D,GAGtB,OAAOQ,E,6BCpBI,IAAAZ,EAAAC,EAAAA,KAAAA,QAAAiE,EAAAjE,EAAAA,KAAAA,QAAA,MAAAkE,EAAA,0BAEPC,EAAenE,EAAQ,KACvBoE,EAAYpE,EAAQ,MACpB,IAAEqE,GAAQrE,EAAQ,KAClBsE,EAAQtE,EAAQ,KAChByD,EAAMzD,EAAQ,MACd,eACJE,EAAc,YACdqE,EAAW,gBACXC,EAAe,UACfC,EAAS,UACTvC,EAAS,KACTwC,GACE1E,EAAQ,KAEZ,IAAI2E,EAAgB,EAEpB/L,EAAOC,QAAU0H,iBAA0E,IAAnEE,EAAKmE,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,MAAOG,EAAGH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAGnB,EAAIuB,UAAWC,EAAQL,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAGM,EAAMN,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EACnF,MAAMO,EAAKb,EAAM,SAAUK,GAC3BS,EAIIjB,EAAYpE,EAAAA,EAAC,CAAC,EACbG,GACA+E,KANC,OACJI,EAAM,aACNC,GAEDF,EADI1E,EAAOuD,EAAAmB,EAAAlB,GAKNqB,EAAW,CAAC,EAIZC,EAAgC,kBAAV/E,EAAqBA,EAAM4B,MAAM,KAAO5B,EACpE,IAAIgF,EAAaV,EACbW,EAAgBR,EACpB,MAAMS,EAAe,CAAClC,EAAImC,QAASnC,EAAIuB,WAAWa,SAASd,KAASrE,EAAQoF,WAE5E,IAAIC,EACAC,EACJ,MAAMC,EAAY,IAAI5E,QAAQ,CAACC,EAASC,KACtCyE,EAAmB1E,EACnByE,EAAkBxE,IAIpB,IAAIZ,EAAS4D,EAAY7D,GACzBC,EAAOiB,QAHcsE,IAAYH,EAAgBG,EAAMC,UAKvDxB,GAAiB,EAEjB,MAAMyB,EAAWnF,IAAA,IAAGkE,GAAIkB,EAAK,OAAEC,EAAM,QAAEC,GAAStF,EAAA,OAC9C,IAAII,QAAQ,CAACC,EAASC,KACpB8C,EAAI,IAADjE,OAAK+E,EAAE,aAAA/E,OAAYiG,EAAK,aAAAjG,OAAYkG,IAEvC,MAAME,EAAY,GAAHpG,OAAMkG,EAAM,KAAAlG,OAAIiG,GAC/Bd,EAASiB,GAAa,CAAElF,UAASC,UACjCmD,EAAK/D,EAAQ,CACX8F,SAAUtB,EACVkB,QACAC,SACAC,eA+CAG,EAAuBA,CAACC,EAAQN,IAAUD,EAAShC,EAAU,CACjEe,GAAIkB,EACJC,OAAQ,eACRC,QAAS,CACP9F,MAAOkG,EACPjG,QAAS,CACPkG,SAAUlG,EAAQkG,SAClBC,SAAUnG,EAAQmG,SAClBC,UAAWpG,EAAQoG,UACnBC,YAAarG,EAAQqG,YACrBC,KAAMtG,EAAQsG,KACdC,SAAU,CAACxD,EAAImC,QAASnC,EAAIuB,WAAWa,SAASJ,KAC1C/E,EAAQwG,gBAKdC,EAAqBA,CAACR,EAAQS,EAAMC,EAAShB,IACjDD,EAAShC,EAAU,CACjBe,GAAIkB,EACJC,OAAQ,aACRC,QAAS,CAAE9F,MAAOkG,EAAQ5B,IAAKqC,EAAMlC,OAAQmC,MAyEjD5C,EAAU9D,EAAQ2G,IAEZ,IAFa,SACjBb,EAAQ,MAAEJ,EAAK,OAAEkB,EAAM,OAAEjB,EAAM,KAAEpF,GAClCoG,EACC,MAAMd,EAAY,GAAHpG,OAAMkG,EAAM,KAAAlG,OAAIiG,GAC/B,GAAe,YAAXkB,EACFlD,EAAI,IAADjE,OAAKqG,EAAQ,gBAAArG,OAAeiG,IAC/Bd,EAASiB,GAAWlF,QAAQ,CAAE+E,QAAOnF,gBAC9BqE,EAASiB,QACX,GAAe,WAAXe,EAAqB,CAI9B,GAHAhC,EAASiB,GAAWjF,OAAOL,UACpBqE,EAASiB,GACD,SAAXF,GAAmBP,EAAgB7E,IACnCoE,EAGF,MAAMtD,MAAMd,GAFZoE,EAAapE,EAIjB,KAAsB,aAAXqG,GACTlC,EAAMtF,EAAAA,EAAC,CAAC,EAAImB,GAAI,IAAEsG,UAAWnB,OAIjC,MAAMoB,EAAa,CACjBtC,KACAxE,SACA+G,KAjKWA,IACXC,QAAQC,KAAK,uFAiKbC,UAxJgBA,CAACC,EAAMC,EAAM1B,IAC7BD,EAAShC,EAAU,CACjBe,GAAIkB,EACJC,OAAQ,KACRC,QAAS,CAAEyB,OAAQ,YAAaC,KAAM,CAACH,EAAMC,OAqJ/CG,SAjJeA,CAACJ,EAAMzB,IACtBD,EAAShC,EAAU,CACjBe,GAAIkB,EACJC,OAAQ,KACRC,QAAS,CAAEyB,OAAQ,WAAYC,KAAM,CAACH,EAAM,CAAEK,SAAU,aA8I1DC,WA1IiBA,CAACN,EAAMzB,IACxBD,EAAShC,EAAU,CACjBe,GAAIkB,EACJC,OAAQ,KACRC,QAAS,CAAEyB,OAAQ,SAAUC,KAAM,CAACH,OAuItCO,GAnISA,CAACL,EAAQC,EAAM5B,IACxBD,EAAShC,EAAU,CACjBe,GAAIkB,EACJC,OAAQ,KACRC,QAAS,CAAEyB,SAAQC,WAgIrBK,aAnGmB,WAAuC,IAAtC7H,EAAKmE,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,MAAOG,EAAGH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAAEI,EAAMN,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAAEuB,EAAKzB,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAErD,GAAIa,GAAgB,CAAClC,EAAI8E,eAAgB9E,EAAI+E,yBAAyB3C,SAASd,GAAM,MAAM/C,MAAM,4CAEjG,MAAMoF,EAAOrC,GAAOU,EACpBA,EAAa2B,EAEb,MAAMC,EAAUnC,GAAUQ,EAC1BA,EAAgB2B,EAOhB,MACMV,GAD4B,kBAAVlG,EAAqBA,EAAM4B,MAAM,KAAO5B,GACxCgI,OAAQC,IAAOlD,EAAaK,SAAS6C,IAG7D,OAFAlD,EAAamD,QAAQhC,GAEjBA,EAAO9B,OAAS,EACX6B,EAAqBC,EAAQN,GACjCuC,KAAK,IAAMzB,EAAmB1G,EAAO2G,EAAMC,EAAShB,IAGlDc,EAAmB1G,EAAO2G,EAAMC,EAAShB,EAClD,EA2EEwC,cAzEoB,WAAmB,OACvCzC,EAAShC,EAAU,CACjBe,GAFqCP,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAGrCwB,OAAQ,gBACRC,QAAS,CAAEuC,OAJclE,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,KAK5B,EAqEHtE,UAlEgBC,eAAOC,GAAK,IAAEuI,EAAInE,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAGoE,EAAMpE,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAClDmD,MAAM,GACA,OACN3B,EAAShC,EAAU,CACjBe,GAFIP,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAGJwB,OAAQ,YACRC,QAAS,CAAE/F,YAAa0B,EAAU1B,GAAQE,QAASqI,EAAMC,YACxD,EA4DHlI,OAzDaP,MAAOC,EAAO6F,KAC3B,GAAIV,EAAc,MAAM3D,MAAM,gEAE9B,OAAOoE,EAAShC,EAAU,CACxBe,GAAIkB,EACJC,OAAQ,SACRC,QAAS,CAAE/F,YAAa0B,EAAU1B,QAoDpCK,UAhDgBN,UACD,OAAXI,IAOF6D,EAAgB7D,GAChBA,EAAS,MAEJU,QAAQC,YAjIK+E,MA+KtB,OA9KED,EAAShC,EAAU,CACjBe,GAAIkB,EAAOC,OAAQ,OAAQC,QAAS,CAAE7F,QAAS,CAAEuG,SAAUtB,EAAcsD,SAAUvI,EAAQuI,SAAUC,QAASxI,EAAQwI,aAwKvHN,KAAK,IAAMlC,EAAqBjG,IAChCmI,KAAK,IAAMzB,EAAmB1G,EAAOsE,EAAKG,IAC1C0D,KAAK,IAAM5C,EAAiByB,IAC5B0B,MAAM,QAEFlD,CACT,C,gBCrPA,IAAItN,EAAU,eACVO,EAAc,EAAQ,IAK1BN,EAAOC,QAJP,SAAuBC,GACrB,IAAIK,EAAID,EAAYJ,EAAG,UACvB,MAAO,UAAYH,EAAQQ,GAAKA,EAAIA,EAAI,EAC1C,EACgCP,EAAOC,QAAQW,YAAa,EAAMZ,EAAOC,QAAiB,QAAID,EAAOC,O,6BCJrG,MAAMyL,EAAQtE,EAAQ,KAEtB,IAAIoJ,EAAa,EAEjBxQ,EAAOC,QAAUoI,IAIX,IAHJkE,GAAIkE,EAAG,OACP/C,EAAM,QACNC,EAAU,CAAC,GACZtF,EACKkE,EAAKkE,EAMT,MALkB,qBAAPlE,IACTA,EAAKb,EAAM,MAAO8E,GAClBA,GAAc,GAGT,CACLjE,KACAmB,SACAC,W,mCClBJ,MAAMnC,EAAYpE,EAAQ,MACpB,IAAEqE,GAAQrE,EAAQ,KAClBsE,EAAQtE,EAAQ,KAEtB,IAAIsJ,EAAmB,EAEvB1Q,EAAOC,QAAU,KACf,MAAMsM,EAAKb,EAAM,YAAagF,GACxBC,EAAU,CAAC,EACXC,EAAiB,CAAC,EACxB,IAAIC,EAAW,GAEfH,GAAoB,EAEpB,MACMI,EAAgBA,IAAMC,OAAOC,KAAKL,GAAS1E,OAE3CgF,EAAUA,KACd,GAAwB,IAApBJ,EAAS5E,OAAc,CACzB,MAAMiF,EAAOH,OAAOC,KAAKL,GACzB,IAAK,IAAIpQ,EAAI,EAAGA,EAAI2Q,EAAKjF,OAAQ1L,GAAK,EACpC,GAAuC,qBAA5BqQ,EAAeM,EAAK3Q,IAAqB,CAClDsQ,EAAS,GAAGF,EAAQO,EAAK3Q,KACzB,KACF,CAEJ,GAGI4Q,EAAQA,CAACzD,EAAQC,IACrB,IAAIlF,QAAQ,CAACC,EAASC,KACpB,MAAMyI,EAAM5F,EAAU,CAAEkC,SAAQC,YAChCkD,EAASd,KAAKpI,UACZkJ,EAASQ,QACTT,EAAeU,EAAE/E,IAAM6E,EACvB,IACE1I,QAAc4I,EAAE5D,GAAQ6D,MAAMC,KAAM,IAAI7D,EAASyD,EAAI7E,KACvD,CAAE,MAAOkF,GACP9I,EAAO8I,EACT,CAAE,eACOb,EAAeU,EAAE/E,IACxB0E,GACF,IAEFxF,EAAI,IAADjE,OAAK+E,EAAE,WAAA/E,OAAU4J,EAAI7E,GAAE,iBAC1Bd,EAAI,IAADjE,OAAK+E,EAAE,uBAAA/E,OAAsBqJ,EAAS5E,SACzCgF,MA0BJ,MAAO,CACLS,UAvBiBJ,IACjBX,EAAQW,EAAE/E,IAAM+E,EAChB7F,EAAI,IAADjE,OAAK+E,EAAE,WAAA/E,OAAU8J,EAAE/E,KACtBd,EAAI,IAADjE,OAAK+E,EAAE,yBAAA/E,OAAwBsJ,MAClCG,IACOK,EAAE/E,IAmBToF,OAhBahK,eAAO+F,GACpB,GAAwB,IAApBoD,IACF,MAAM1H,MAAM,IAAD5B,OAAK+E,EAAE,+DACnB,QAAAqF,EAAA5F,UAAAC,OAH8B0B,EAAO,IAAAkE,MAAAD,EAAA,EAAAA,EAAA,KAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAPnE,EAAOmE,EAAA,GAAA9F,UAAA8F,GAItC,OAAOX,EAAMzD,EAAQC,EACvB,EAYE1F,UAVgBN,UAChBoJ,OAAOC,KAAKL,GAASoB,QAAQpK,gBACrBgJ,EAAQqB,GAAK/J,cAErB4I,EAAW,IAOXoB,YA9DkBA,IAAMpB,EAAS5E,OA+DjC6E,iB,iCC/ES,IAAAoB,EAAA,KAEb,IAAI5B,GAAU,EAEdrQ,EAAQqQ,QAAUA,EAElBrQ,EAAQ8K,WAAcoH,IACpB7B,EAAU6B,GAGZlS,EAAQwL,IAAM,mBAAAmG,EAAA5F,UAAAC,OAAIoD,EAAI,IAAAwC,MAAAD,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJzC,EAAIyC,GAAA9F,UAAA8F,GAAA,OAAMxB,EAAUvB,QAAQtD,IAAI8F,MAAMW,EAAM7C,GAAQ,IAAI,C,6BCV7D,IAAAlI,EAAAC,EAAAA,KAAAA,QAEb,MAEMgL,EAFoD,YAAxChL,EAAQ,IAARA,CAA4B,QAEfiL,GAAM,IAAIpH,IAAIoH,EAAGC,OAAOC,SAASC,MAAOA,KAAOH,GAAKA,EAEnFrS,EAAOC,QAAW6H,IAChB,MAAMqI,EAAIhJ,EAAA,GAAQW,GAMlB,MALA,CAAC,WAAY,aAAc,YAAYiK,QAASU,IAC1C3K,EAAQ2K,KACVtC,EAAKsC,GAAOL,EAAWjC,EAAKsC,OAGzBtC,E,uBCLTnQ,EAAOC,QAAU,CACf0P,eAAgB,EAChBvD,UAAW,EACXwD,wBAAyB,EACzB5C,QAAS,E,uBCVXhN,EAAOC,QAAU,CAACyS,EAAQC,IAAQ,GAALnL,OACxBkL,EAAM,KAAAlL,OAAImL,EAAG,KAAAnL,OAAIoL,KAAKC,SAASC,SAAS,IAAIC,MAAM,EAAG,G,uBCM1D/S,EAAOC,QAAU0H,MAAOI,EAAQiL,KAC9BjL,EAAOkL,YAAYD,G,gBCVrB,IAAIE,EAAgB,EAAQ,KAS5BlT,EAAOC,QARP,SAAyBG,EAAGD,EAAGD,GAC7B,OAAQC,EAAI+S,EAAc/S,MAAOC,EAAI2Q,OAAOoC,eAAe/S,EAAGD,EAAG,CAC/DiT,MAAOlT,EACPmT,YAAY,EACZC,cAAc,EACdC,UAAU,IACPnT,EAAED,GAAKD,EAAGE,CACjB,EACkCJ,EAAOC,QAAQW,YAAa,EAAMZ,EAAOC,QAAiB,QAAID,EAAOC,O,uBCPvGD,EAAOC,QAAU,CAMf+K,eAAe,EACfyB,OAAQA,O,uBCPVzM,EAAOC,QAAWwS,IAChB,MAAMe,EAAM,CAAC,EAUb,MARiC,qBAAtBC,kBACTD,EAAItI,KAAO,YACkB,kBAAbwI,SAChBF,EAAItI,KAAO,UACiB,kBAAZyI,UAChBH,EAAItI,KAAO,QAGM,qBAARuH,EACFe,EAGFA,EAAIf,G,UCjBb,SAAS1S,EAAQ6T,GAGf,OAAO5T,EAAOC,QAAUF,EAAU,mBAAqBM,QAAU,iBAAmBA,OAAOwT,SAAW,SAAUD,GAC9G,cAAcA,CAChB,EAAI,SAAUA,GACZ,OAAOA,GAAK,mBAAqBvT,QAAUuT,EAAEE,cAAgBzT,QAAUuT,IAAMvT,OAAO0T,UAAY,gBAAkBH,CACpH,EAAG5T,EAAOC,QAAQW,YAAa,EAAMZ,EAAOC,QAAiB,QAAID,EAAOC,QAASF,EAAQ6T,EAC3F,CACA5T,EAAOC,QAAUF,EAASC,EAAOC,QAAQW,YAAa,EAAMZ,EAAOC,QAAiB,QAAID,EAAOC,O,uBCJ/FD,EAAOC,QAAU,CACf+T,SAAU,IACVC,SAAU,IACVC,UAAW,IACXC,KAAM,IACNC,cAAe,IACfC,uBAAwB,IACxBC,aAAc,IACdC,YAAa,IACbC,YAAa,IACbC,YAAa,IACbC,YAAa,KACbC,YAAa,KACbC,gBAAiB,KACjBC,SAAU,K,uBCVZ7U,EAAOC,QAAW8H,IAChBA,EAAOE,Y,gBCVT,IAAI6M,EAA+B,EAAQ,KAY3C9U,EAAOC,QAXP,SAAkCG,EAAGF,GACnC,GAAI,MAAQE,EAAG,MAAO,CAAC,EACvB,IAAIwT,EACFzT,EACAI,EAAIuU,EAA6B1U,EAAGF,GACtC,GAAI6Q,OAAOgE,sBAAuB,CAChC,IAAIC,EAAIjE,OAAOgE,sBAAsB3U,GACrC,IAAKD,EAAI,EAAGA,EAAI6U,EAAE/I,OAAQ9L,IAAKyT,EAAIoB,EAAE7U,IAAK,IAAMD,EAAE+U,QAAQrB,IAAM,CAAC,EAAEsB,qBAAqB1U,KAAKJ,EAAGwT,KAAOrT,EAAEqT,GAAKxT,EAAEwT,GAClH,CACA,OAAOrT,CACT,EAC2CP,EAAOC,QAAQW,YAAa,EAAMZ,EAAOC,QAAiB,QAAID,EAAOC,O,UCHhHD,EAAOC,QATP,SAAuCE,EAAGC,GACxC,GAAI,MAAQD,EAAG,MAAO,CAAC,EACvB,IAAID,EAAI,CAAC,EACT,IAAK,IAAI8U,KAAK7U,EAAG,GAAI,CAAC,EAAEgV,eAAe3U,KAAKL,EAAG6U,GAAI,CACjD,IAAK,IAAM5U,EAAE6U,QAAQD,GAAI,SACzB9U,EAAE8U,GAAK7U,EAAE6U,EACX,CACA,OAAO9U,CACT,EACgDF,EAAOC,QAAQW,YAAa,EAAMZ,EAAOC,QAAiB,QAAID,EAAOC,O,gBCTrH,IAAIkT,EAAiB,EAAQ,KAC7B,SAASiC,EAAQhV,EAAGD,GAClB,IAAID,EAAI6Q,OAAOC,KAAK5Q,GACpB,GAAI2Q,OAAOgE,sBAAuB,CAChC,IAAInB,EAAI7C,OAAOgE,sBAAsB3U,GACrCD,IAAMyT,EAAIA,EAAE/D,OAAO,SAAU1P,GAC3B,OAAO4Q,OAAOsE,yBAAyBjV,EAAGD,GAAGkT,UAC/C,IAAKnT,EAAE6P,KAAKwB,MAAMrR,EAAG0T,EACvB,CACA,OAAO1T,CACT,CAYAF,EAAOC,QAXP,SAAwBG,GACtB,IAAK,IAAID,EAAI,EAAGA,EAAI6L,UAAUC,OAAQ9L,IAAK,CACzC,IAAID,EAAI,MAAQ8L,UAAU7L,GAAK6L,UAAU7L,GAAK,CAAC,EAC/CA,EAAI,EAAIiV,EAAQrE,OAAO7Q,IAAI,GAAI6R,QAAQ,SAAU5R,GAC/CgT,EAAe/S,EAAGD,EAAGD,EAAEC,GACzB,GAAK4Q,OAAOuE,0BAA4BvE,OAAOwE,iBAAiBnV,EAAG2Q,OAAOuE,0BAA0BpV,IAAMkV,EAAQrE,OAAO7Q,IAAI6R,QAAQ,SAAU5R,GAC7I4Q,OAAOoC,eAAe/S,EAAGD,EAAG4Q,OAAOsE,yBAAyBnV,EAAGC,GACjE,EACF,CACA,OAAOC,CACT,EACiCJ,EAAOC,QAAQW,YAAa,EAAMZ,EAAOC,QAAiB,QAAID,EAAOC,O,6BCXtG,MAAMqH,EAAiBF,EAAQ,KACzBuE,EAAcvE,EAAQ,KACtBwE,EAAkBxE,EAAQ,KAC1ByE,EAAYzE,EAAQ,KACpB0E,EAAO1E,EAAQ,KACfkC,EAAYlC,EAAQ,KAE1BpH,EAAOC,QAAU,CACfqH,iBACAqE,cACAC,kBACAC,YACAC,OACAxC,Y","sources":["../node_modules/@babel/runtime/helpers/toPrimitive.js","../node_modules/tesseract.js/src/constants/languages.js","../node_modules/tesseract.js/src/worker/browser/defaultOptions.js","../node_modules/tesseract.js/src/Tesseract.js","../node_modules/tesseract.js/src/worker/browser/onMessage.js","../node_modules/tesseract.js/src/worker/browser/loadImage.js","../node_modules/tesseract.js/src/index.js","../node_modules/tesseract.js/src/worker/browser/spawnWorker.js","../node_modules/tesseract.js/src/createWorker.js","../node_modules/@babel/runtime/helpers/toPropertyKey.js","../node_modules/tesseract.js/src/createJob.js","../node_modules/tesseract.js/src/createScheduler.js","../node_modules/tesseract.js/src/utils/log.js","../node_modules/tesseract.js/src/utils/resolvePaths.js","../node_modules/tesseract.js/src/constants/OEM.js","../node_modules/tesseract.js/src/utils/getId.js","../node_modules/tesseract.js/src/worker/browser/send.js","../node_modules/@babel/runtime/helpers/defineProperty.js","../node_modules/tesseract.js/src/constants/defaultOptions.js","../node_modules/tesseract.js/src/utils/getEnvironment.js","../node_modules/@babel/runtime/helpers/typeof.js","../node_modules/tesseract.js/src/constants/PSM.js","../node_modules/tesseract.js/src/worker/browser/terminateWorker.js","../node_modules/@babel/runtime/helpers/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose.js","../node_modules/@babel/runtime/helpers/objectSpread2.js","../node_modules/tesseract.js/src/worker/browser/index.js"],"sourcesContent":["var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nmodule.exports = toPrimitive, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","'use strict';\n\n/*\n * languages with existing tesseract traineddata\n * https://tesseract-ocr.github.io/tessdoc/Data-Files#data-files-for-version-400-november-29-2016\n */\n\n/**\n * @typedef {object} Languages\n * @property {string} AFR Afrikaans\n * @property {string} AMH Amharic\n * @property {string} ARA Arabic\n * @property {string} ASM Assamese\n * @property {string} AZE Azerbaijani\n * @property {string} AZE_CYRL Azerbaijani - Cyrillic\n * @property {string} BEL Belarusian\n * @property {string} BEN Bengali\n * @property {string} BOD Tibetan\n * @property {string} BOS Bosnian\n * @property {string} BUL Bulgarian\n * @property {string} CAT Catalan; Valencian\n * @property {string} CEB Cebuano\n * @property {string} CES Czech\n * @property {string} CHI_SIM Chinese - Simplified\n * @property {string} CHI_TRA Chinese - Traditional\n * @property {string} CHR Cherokee\n * @property {string} CYM Welsh\n * @property {string} DAN Danish\n * @property {string} DEU German\n * @property {string} DZO Dzongkha\n * @property {string} ELL Greek, Modern (1453-)\n * @property {string} ENG English\n * @property {string} ENM English, Middle (1100-1500)\n * @property {string} EPO Esperanto\n * @property {string} EST Estonian\n * @property {string} EUS Basque\n * @property {string} FAS Persian\n * @property {string} FIN Finnish\n * @property {string} FRA French\n * @property {string} FRK German Fraktur\n * @property {string} FRM French, Middle (ca. 1400-1600)\n * @property {string} GLE Irish\n * @property {string} GLG Galician\n * @property {string} GRC Greek, Ancient (-1453)\n * @property {string} GUJ Gujarati\n * @property {string} HAT Haitian; Haitian Creole\n * @property {string} HEB Hebrew\n * @property {string} HIN Hindi\n * @property {string} HRV Croatian\n * @property {string} HUN Hungarian\n * @property {string} IKU Inuktitut\n * @property {string} IND Indonesian\n * @property {string} ISL Icelandic\n * @property {string} ITA Italian\n * @property {string} ITA_OLD Italian - Old\n * @property {string} JAV Javanese\n * @property {string} JPN Japanese\n * @property {string} KAN Kannada\n * @property {string} KAT Georgian\n * @property {string} KAT_OLD Georgian - Old\n * @property {string} KAZ Kazakh\n * @property {string} KHM Central Khmer\n * @property {string} KIR Kirghiz; Kyrgyz\n * @property {string} KOR Korean\n * @property {string} KUR Kurdish\n * @property {string} LAO Lao\n * @property {string} LAT Latin\n * @property {string} LAV Latvian\n * @property {string} LIT Lithuanian\n * @property {string} MAL Malayalam\n * @property {string} MAR Marathi\n * @property {string} MKD Macedonian\n * @property {string} MLT Maltese\n * @property {string} MSA Malay\n * @property {string} MYA Burmese\n * @property {string} NEP Nepali\n * @property {string} NLD Dutch; Flemish\n * @property {string} NOR Norwegian\n * @property {string} ORI Oriya\n * @property {string} PAN Panjabi; Punjabi\n * @property {string} POL Polish\n * @property {string} POR Portuguese\n * @property {string} PUS Pushto; Pashto\n * @property {string} RON Romanian; Moldavian; Moldovan\n * @property {string} RUS Russian\n * @property {string} SAN Sanskrit\n * @property {string} SIN Sinhala; Sinhalese\n * @property {string} SLK Slovak\n * @property {string} SLV Slovenian\n * @property {string} SPA Spanish; Castilian\n * @property {string} SPA_OLD Spanish; Castilian - Old\n * @property {string} SQI Albanian\n * @property {string} SRP Serbian\n * @property {string} SRP_LATN Serbian - Latin\n * @property {string} SWA Swahili\n * @property {string} SWE Swedish\n * @property {string} SYR Syriac\n * @property {string} TAM Tamil\n * @property {string} TEL Telugu\n * @property {string} TGK Tajik\n * @property {string} TGL Tagalog\n * @property {string} THA Thai\n * @property {string} TIR Tigrinya\n * @property {string} TUR Turkish\n * @property {string} UIG Uighur; Uyghur\n * @property {string} UKR Ukrainian\n * @property {string} URD Urdu\n * @property {string} UZB Uzbek\n * @property {string} UZB_CYRL Uzbek - Cyrillic\n * @property {string} VIE Vietnamese\n * @property {string} YID Yiddish\n */\n\n/**\n  * @type {Languages}\n  */\nmodule.exports = {\n  AFR: 'afr',\n  AMH: 'amh',\n  ARA: 'ara',\n  ASM: 'asm',\n  AZE: 'aze',\n  AZE_CYRL: 'aze_cyrl',\n  BEL: 'bel',\n  BEN: 'ben',\n  BOD: 'bod',\n  BOS: 'bos',\n  BUL: 'bul',\n  CAT: 'cat',\n  CEB: 'ceb',\n  CES: 'ces',\n  CHI_SIM: 'chi_sim',\n  CHI_TRA: 'chi_tra',\n  CHR: 'chr',\n  CYM: 'cym',\n  DAN: 'dan',\n  DEU: 'deu',\n  DZO: 'dzo',\n  ELL: 'ell',\n  ENG: 'eng',\n  ENM: 'enm',\n  EPO: 'epo',\n  EST: 'est',\n  EUS: 'eus',\n  FAS: 'fas',\n  FIN: 'fin',\n  FRA: 'fra',\n  FRK: 'frk',\n  FRM: 'frm',\n  GLE: 'gle',\n  GLG: 'glg',\n  GRC: 'grc',\n  GUJ: 'guj',\n  HAT: 'hat',\n  HEB: 'heb',\n  HIN: 'hin',\n  HRV: 'hrv',\n  HUN: 'hun',\n  IKU: 'iku',\n  IND: 'ind',\n  ISL: 'isl',\n  ITA: 'ita',\n  ITA_OLD: 'ita_old',\n  JAV: 'jav',\n  JPN: 'jpn',\n  KAN: 'kan',\n  KAT: 'kat',\n  KAT_OLD: 'kat_old',\n  KAZ: 'kaz',\n  KHM: 'khm',\n  KIR: 'kir',\n  KOR: 'kor',\n  KUR: 'kur',\n  LAO: 'lao',\n  LAT: 'lat',\n  LAV: 'lav',\n  LIT: 'lit',\n  MAL: 'mal',\n  MAR: 'mar',\n  MKD: 'mkd',\n  MLT: 'mlt',\n  MSA: 'msa',\n  MYA: 'mya',\n  NEP: 'nep',\n  NLD: 'nld',\n  NOR: 'nor',\n  ORI: 'ori',\n  PAN: 'pan',\n  POL: 'pol',\n  POR: 'por',\n  PUS: 'pus',\n  RON: 'ron',\n  RUS: 'rus',\n  SAN: 'san',\n  SIN: 'sin',\n  SLK: 'slk',\n  SLV: 'slv',\n  SPA: 'spa',\n  SPA_OLD: 'spa_old',\n  SQI: 'sqi',\n  SRP: 'srp',\n  SRP_LATN: 'srp_latn',\n  SWA: 'swa',\n  SWE: 'swe',\n  SYR: 'syr',\n  TAM: 'tam',\n  TEL: 'tel',\n  TGK: 'tgk',\n  TGL: 'tgl',\n  THA: 'tha',\n  TIR: 'tir',\n  TUR: 'tur',\n  UIG: 'uig',\n  UKR: 'ukr',\n  URD: 'urd',\n  UZB: 'uzb',\n  UZB_CYRL: 'uzb_cyrl',\n  VIE: 'vie',\n  YID: 'yid',\n};\n","'use strict';\n\nconst version = require('../../../package.json').version;\nconst defaultOptions = require('../../constants/defaultOptions');\n\n/*\n * Default options for browser worker\n */\nmodule.exports = {\n  ...defaultOptions,\n  workerPath: `https://cdn.jsdelivr.net/npm/tesseract.js@v${version}/dist/worker.min.js`,\n};\n","'use strict';\n\nconst createWorker = require('./createWorker');\n\nconst recognize = async (image, langs, options) => {\n  const worker = await createWorker(langs, 1, options);\n  return worker.recognize(image)\n    .finally(async () => {\n      await worker.terminate();\n    });\n};\n\nconst detect = async (image, options) => {\n  const worker = await createWorker('osd', 0, options);\n  return worker.detect(image)\n    .finally(async () => {\n      await worker.terminate();\n    });\n};\n\nmodule.exports = {\n  recognize,\n  detect,\n};\n","'use strict';\n\nmodule.exports = (worker, handler) => {\n  worker.onmessage = ({ data }) => { // eslint-disable-line\n    handler(data);\n  };\n};\n","'use strict';\n\n/**\n * readFromBlobOrFile\n *\n * @name readFromBlobOrFile\n * @function\n * @access private\n */\nconst readFromBlobOrFile = (blob) => (\n  new Promise((resolve, reject) => {\n    const fileReader = new FileReader();\n    fileReader.onload = () => {\n      resolve(fileReader.result);\n    };\n    fileReader.onerror = ({ target: { error: { code } } }) => {\n      reject(Error(`File could not be read! Code=${code}`));\n    };\n    fileReader.readAsArrayBuffer(blob);\n  })\n);\n\n/**\n * loadImage\n *\n * @name loadImage\n * @function load image from different source\n * @access private\n */\nconst loadImage = async (image) => {\n  let data = image;\n  if (typeof image === 'undefined') {\n    return 'undefined';\n  }\n\n  if (typeof image === 'string') {\n    // Base64 Image\n    if (/data:image\\/([a-zA-Z]*);base64,([^\"]*)/.test(image)) {\n      data = atob(image.split(',')[1])\n        .split('')\n        .map((c) => c.charCodeAt(0));\n    } else {\n      const resp = await fetch(image);\n      data = await resp.arrayBuffer();\n    }\n  } else if (typeof HTMLElement !== 'undefined' && image instanceof HTMLElement) {\n    if (image.tagName === 'IMG') {\n      data = await loadImage(image.src);\n    }\n    if (image.tagName === 'VIDEO') {\n      data = await loadImage(image.poster);\n    }\n    if (image.tagName === 'CANVAS') {\n      await new Promise((resolve) => {\n        image.toBlob(async (blob) => {\n          data = await readFromBlobOrFile(blob);\n          resolve();\n        });\n      });\n    }\n  } else if (typeof OffscreenCanvas !== 'undefined' && image instanceof OffscreenCanvas) {\n    const blob = await image.convertToBlob();\n    data = await readFromBlobOrFile(blob);\n  } else if (image instanceof File || image instanceof Blob) {\n    data = await readFromBlobOrFile(image);\n  }\n\n  return new Uint8Array(data);\n};\n\nmodule.exports = loadImage;\n","'use strict';\n\n/**\n *\n * Entry point for tesseract.js, should be the entry when bundling.\n *\n * @fileoverview entry point for tesseract.js\n * @author Kevin Kwok <antimatter15@gmail.com>\n * @author Guillermo Webster <gui@mit.edu>\n * @author Jerome Wu <jeromewus@gmail.com>\n */\nrequire('regenerator-runtime/runtime');\nconst createScheduler = require('./createScheduler');\nconst createWorker = require('./createWorker');\nconst Tesseract = require('./Tesseract');\nconst languages = require('./constants/languages');\nconst OEM = require('./constants/OEM');\nconst PSM = require('./constants/PSM');\nconst { setLogging } = require('./utils/log');\n\nmodule.exports = {\n  languages,\n  OEM,\n  PSM,\n  createScheduler,\n  createWorker,\n  setLogging,\n  ...Tesseract,\n};\n","'use strict';\n\n/**\n * spawnWorker\n *\n * @name spawnWorker\n * @function create a new Worker in browser\n * @access public\n */\nmodule.exports = ({ workerPath, workerBlobURL }) => {\n  let worker;\n  if (Blob && URL && workerBlobURL) {\n    const blob = new Blob([`importScripts(\"${workerPath}\");`], {\n      type: 'application/javascript',\n    });\n    worker = new Worker(URL.createObjectURL(blob));\n  } else {\n    worker = new Worker(workerPath);\n  }\n\n  return worker;\n};\n","'use strict';\n\nconst resolvePaths = require('./utils/resolvePaths');\nconst createJob = require('./createJob');\nconst { log } = require('./utils/log');\nconst getId = require('./utils/getId');\nconst OEM = require('./constants/OEM');\nconst {\n  defaultOptions,\n  spawnWorker,\n  terminateWorker,\n  onMessage,\n  loadImage,\n  send,\n} = require('./worker/node');\n\nlet workerCounter = 0;\n\nmodule.exports = async (langs = 'eng', oem = OEM.LSTM_ONLY, _options = {}, config = {}) => {\n  const id = getId('Worker', workerCounter);\n  const {\n    logger,\n    errorHandler,\n    ...options\n  } = resolvePaths({\n    ...defaultOptions,\n    ..._options,\n  });\n  const promises = {};\n\n  // Current langs, oem, and config file.\n  // Used if the user ever re-initializes the worker using `worker.reinitialize`.\n  const currentLangs = typeof langs === 'string' ? langs.split('+') : langs;\n  let currentOem = oem;\n  let currentConfig = config;\n  const lstmOnlyCore = [OEM.DEFAULT, OEM.LSTM_ONLY].includes(oem) && !options.legacyCore;\n\n  let workerResReject;\n  let workerResResolve;\n  const workerRes = new Promise((resolve, reject) => {\n    workerResResolve = resolve;\n    workerResReject = reject;\n  });\n  const workerError = (event) => { workerResReject(event.message); };\n\n  let worker = spawnWorker(options);\n  worker.onerror = workerError;\n\n  workerCounter += 1;\n\n  const startJob = ({ id: jobId, action, payload }) => (\n    new Promise((resolve, reject) => {\n      log(`[${id}]: Start ${jobId}, action=${action}`);\n      // Using both `action` and `jobId` in case user provides non-unique `jobId`.\n      const promiseId = `${action}-${jobId}`;\n      promises[promiseId] = { resolve, reject };\n      send(worker, {\n        workerId: id,\n        jobId,\n        action,\n        payload,\n      });\n    })\n  );\n\n  const load = () => (\n    console.warn('`load` is depreciated and should be removed from code (workers now come pre-loaded)')\n  );\n\n  const loadInternal = (jobId) => (\n    startJob(createJob({\n      id: jobId, action: 'load', payload: { options: { lstmOnly: lstmOnlyCore, corePath: options.corePath, logging: options.logging } },\n    }))\n  );\n\n  const writeText = (path, text, jobId) => (\n    startJob(createJob({\n      id: jobId,\n      action: 'FS',\n      payload: { method: 'writeFile', args: [path, text] },\n    }))\n  );\n\n  const readText = (path, jobId) => (\n    startJob(createJob({\n      id: jobId,\n      action: 'FS',\n      payload: { method: 'readFile', args: [path, { encoding: 'utf8' }] },\n    }))\n  );\n\n  const removeFile = (path, jobId) => (\n    startJob(createJob({\n      id: jobId,\n      action: 'FS',\n      payload: { method: 'unlink', args: [path] },\n    }))\n  );\n\n  const FS = (method, args, jobId) => (\n    startJob(createJob({\n      id: jobId,\n      action: 'FS',\n      payload: { method, args },\n    }))\n  );\n\n  const loadLanguageInternal = (_langs, jobId) => startJob(createJob({\n    id: jobId,\n    action: 'loadLanguage',\n    payload: {\n      langs: _langs,\n      options: {\n        langPath: options.langPath,\n        dataPath: options.dataPath,\n        cachePath: options.cachePath,\n        cacheMethod: options.cacheMethod,\n        gzip: options.gzip,\n        lstmOnly: [OEM.DEFAULT, OEM.LSTM_ONLY].includes(currentOem)\n          && !options.legacyLang,\n      },\n    },\n  }));\n\n  const initializeInternal = (_langs, _oem, _config, jobId) => (\n    startJob(createJob({\n      id: jobId,\n      action: 'initialize',\n      payload: { langs: _langs, oem: _oem, config: _config },\n    }))\n  );\n\n  const reinitialize = (langs = 'eng', oem, config, jobId) => { // eslint-disable-line\n\n    if (lstmOnlyCore && [OEM.TESSERACT_ONLY, OEM.TESSERACT_LSTM_COMBINED].includes(oem)) throw Error('Legacy model requested but code missing.');\n\n    const _oem = oem || currentOem;\n    currentOem = _oem;\n\n    const _config = config || currentConfig;\n    currentConfig = _config;\n\n    // Only load langs that are not already loaded.\n    // This logic fails if the user downloaded the LSTM-only English data for a language\n    // and then uses `worker.reinitialize` to switch to the Legacy engine.\n    // However, the correct data will still be downloaded after initialization fails\n    // and this can be avoided entirely if the user loads the correct data ahead of time.\n    const langsArr = typeof langs === 'string' ? langs.split('+') : langs;\n    const _langs = langsArr.filter((x) => !currentLangs.includes(x));\n    currentLangs.push(..._langs);\n\n    if (_langs.length > 0) {\n      return loadLanguageInternal(_langs, jobId)\n        .then(() => initializeInternal(langs, _oem, _config, jobId));\n    }\n\n    return initializeInternal(langs, _oem, _config, jobId);\n  };\n\n  const setParameters = (params = {}, jobId) => (\n    startJob(createJob({\n      id: jobId,\n      action: 'setParameters',\n      payload: { params },\n    }))\n  );\n\n  const recognize = async (image, opts = {}, output = {\n    text: true,\n  }, jobId) => (\n    startJob(createJob({\n      id: jobId,\n      action: 'recognize',\n      payload: { image: await loadImage(image), options: opts, output },\n    }))\n  );\n\n  const detect = async (image, jobId) => {\n    if (lstmOnlyCore) throw Error('`worker.detect` requires Legacy model, which was not loaded.');\n\n    return startJob(createJob({\n      id: jobId,\n      action: 'detect',\n      payload: { image: await loadImage(image) },\n    }));\n  };\n\n  const terminate = async () => {\n    if (worker !== null) {\n      /*\n      await startJob(createJob({\n        id: jobId,\n        action: 'terminate',\n      }));\n      */\n      terminateWorker(worker);\n      worker = null;\n    }\n    return Promise.resolve();\n  };\n\n  onMessage(worker, ({\n    workerId, jobId, status, action, data,\n  }) => {\n    const promiseId = `${action}-${jobId}`;\n    if (status === 'resolve') {\n      log(`[${workerId}]: Complete ${jobId}`);\n      promises[promiseId].resolve({ jobId, data });\n      delete promises[promiseId];\n    } else if (status === 'reject') {\n      promises[promiseId].reject(data);\n      delete promises[promiseId];\n      if (action === 'load') workerResReject(data);\n      if (errorHandler) {\n        errorHandler(data);\n      } else {\n        throw Error(data);\n      }\n    } else if (status === 'progress') {\n      logger({ ...data, userJobId: jobId });\n    }\n  });\n\n  const resolveObj = {\n    id,\n    worker,\n    load,\n    writeText,\n    readText,\n    removeFile,\n    FS,\n    reinitialize,\n    setParameters,\n    recognize,\n    detect,\n    terminate,\n  };\n\n  loadInternal()\n    .then(() => loadLanguageInternal(langs))\n    .then(() => initializeInternal(langs, oem, config))\n    .then(() => workerResResolve(resolveObj))\n    .catch(() => {});\n\n  return workerRes;\n};\n","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar toPrimitive = require(\"./toPrimitive.js\");\nfunction toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nmodule.exports = toPropertyKey, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","'use strict';\n\nconst getId = require('./utils/getId');\n\nlet jobCounter = 0;\n\nmodule.exports = ({\n  id: _id,\n  action,\n  payload = {},\n}) => {\n  let id = _id;\n  if (typeof id === 'undefined') {\n    id = getId('Job', jobCounter);\n    jobCounter += 1;\n  }\n\n  return {\n    id,\n    action,\n    payload,\n  };\n};\n","'use strict';\n\nconst createJob = require('./createJob');\nconst { log } = require('./utils/log');\nconst getId = require('./utils/getId');\n\nlet schedulerCounter = 0;\n\nmodule.exports = () => {\n  const id = getId('Scheduler', schedulerCounter);\n  const workers = {};\n  const runningWorkers = {};\n  let jobQueue = [];\n\n  schedulerCounter += 1;\n\n  const getQueueLen = () => jobQueue.length;\n  const getNumWorkers = () => Object.keys(workers).length;\n\n  const dequeue = () => {\n    if (jobQueue.length !== 0) {\n      const wIds = Object.keys(workers);\n      for (let i = 0; i < wIds.length; i += 1) {\n        if (typeof runningWorkers[wIds[i]] === 'undefined') {\n          jobQueue[0](workers[wIds[i]]);\n          break;\n        }\n      }\n    }\n  };\n\n  const queue = (action, payload) => (\n    new Promise((resolve, reject) => {\n      const job = createJob({ action, payload });\n      jobQueue.push(async (w) => {\n        jobQueue.shift();\n        runningWorkers[w.id] = job;\n        try {\n          resolve(await w[action].apply(this, [...payload, job.id]));\n        } catch (err) {\n          reject(err);\n        } finally {\n          delete runningWorkers[w.id];\n          dequeue();\n        }\n      });\n      log(`[${id}]: Add ${job.id} to JobQueue`);\n      log(`[${id}]: JobQueue length=${jobQueue.length}`);\n      dequeue();\n    })\n  );\n\n  const addWorker = (w) => {\n    workers[w.id] = w;\n    log(`[${id}]: Add ${w.id}`);\n    log(`[${id}]: Number of workers=${getNumWorkers()}`);\n    dequeue();\n    return w.id;\n  };\n\n  const addJob = async (action, ...payload) => {\n    if (getNumWorkers() === 0) {\n      throw Error(`[${id}]: You need to have at least one worker before adding jobs`);\n    }\n    return queue(action, payload);\n  };\n\n  const terminate = async () => {\n    Object.keys(workers).forEach(async (wid) => {\n      await workers[wid].terminate();\n    });\n    jobQueue = [];\n  };\n\n  return {\n    addWorker,\n    addJob,\n    terminate,\n    getQueueLen,\n    getNumWorkers,\n  };\n};\n","'use strict';\n\nlet logging = false;\n\nexports.logging = logging;\n\nexports.setLogging = (_logging) => {\n  logging = _logging;\n};\n\nexports.log = (...args) => (logging ? console.log.apply(this, args) : null);\n","'use strict';\n\nconst isBrowser = require('./getEnvironment')('type') === 'browser';\n\nconst resolveURL = isBrowser ? s => (new URL(s, window.location.href)).href : s => s; // eslint-disable-line\n\nmodule.exports = (options) => {\n  const opts = { ...options };\n  ['corePath', 'workerPath', 'langPath'].forEach((key) => {\n    if (options[key]) {\n      opts[key] = resolveURL(opts[key]);\n    }\n  });\n  return opts;\n};\n","'use strict';\n\n/*\n * OEM = OCR Engine Mode, and there are 4 possible modes.\n *\n * By default tesseract.js uses LSTM_ONLY mode.\n *\n */\nmodule.exports = {\n  TESSERACT_ONLY: 0,\n  LSTM_ONLY: 1,\n  TESSERACT_LSTM_COMBINED: 2,\n  DEFAULT: 3,\n};\n","'use strict';\n\nmodule.exports = (prefix, cnt) => (\n  `${prefix}-${cnt}-${Math.random().toString(16).slice(3, 8)}`\n);\n","'use strict';\n\n/**\n * send\n *\n * @name send\n * @function send packet to worker and create a job\n * @access public\n */\nmodule.exports = async (worker, packet) => {\n  worker.postMessage(packet);\n};\n","var toPropertyKey = require(\"./toPropertyKey.js\");\nfunction _defineProperty(e, r, t) {\n  return (r = toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nmodule.exports = _defineProperty, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","'use strict';\n\nmodule.exports = {\n  /*\n   * Use BlobURL for worker script by default\n   * TODO: remove this option\n   *\n   */\n  workerBlobURL: true,\n  logger: () => {},\n};\n","'use strict';\n\nmodule.exports = (key) => {\n  const env = {};\n\n  if (typeof WorkerGlobalScope !== 'undefined') {\n    env.type = 'webworker';\n  } else if (typeof document === 'object') {\n    env.type = 'browser';\n  } else if (typeof process === 'object' && typeof require === 'function') {\n    env.type = 'node';\n  }\n\n  if (typeof key === 'undefined') {\n    return env;\n  }\n\n  return env[key];\n};\n","function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports, _typeof(o);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","'use strict';\n\n/*\n * PSM = Page Segmentation Mode\n */\nmodule.exports = {\n  OSD_ONLY: '0',\n  AUTO_OSD: '1',\n  AUTO_ONLY: '2',\n  AUTO: '3',\n  SINGLE_COLUMN: '4',\n  SINGLE_BLOCK_VERT_TEXT: '5',\n  SINGLE_BLOCK: '6',\n  SINGLE_LINE: '7',\n  SINGLE_WORD: '8',\n  CIRCLE_WORD: '9',\n  SINGLE_CHAR: '10',\n  SPARSE_TEXT: '11',\n  SPARSE_TEXT_OSD: '12',\n  RAW_LINE: '13',\n};\n","'use strict';\n\n/**\n * terminateWorker\n *\n * @name terminateWorker\n * @function terminate worker\n * @access public\n */\nmodule.exports = (worker) => {\n  worker.terminate();\n};\n","var objectWithoutPropertiesLoose = require(\"./objectWithoutPropertiesLoose.js\");\nfunction _objectWithoutProperties(e, t) {\n  if (null == e) return {};\n  var o,\n    r,\n    i = objectWithoutPropertiesLoose(e, t);\n  if (Object.getOwnPropertySymbols) {\n    var n = Object.getOwnPropertySymbols(e);\n    for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]);\n  }\n  return i;\n}\nmodule.exports = _objectWithoutProperties, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _objectWithoutPropertiesLoose(r, e) {\n  if (null == r) return {};\n  var t = {};\n  for (var n in r) if ({}.hasOwnProperty.call(r, n)) {\n    if (-1 !== e.indexOf(n)) continue;\n    t[n] = r[n];\n  }\n  return t;\n}\nmodule.exports = _objectWithoutPropertiesLoose, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var defineProperty = require(\"./defineProperty.js\");\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread2(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\nmodule.exports = _objectSpread2, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","'use strict';\n\n/**\n *\n * Tesseract Worker adapter for browser\n *\n * @fileoverview Tesseract Worker adapter for browser\n * @author Kevin Kwok <antimatter15@gmail.com>\n * @author Guillermo Webster <gui@mit.edu>\n * @author Jerome Wu <jeromewus@gmail.com>\n */\nconst defaultOptions = require('./defaultOptions');\nconst spawnWorker = require('./spawnWorker');\nconst terminateWorker = require('./terminateWorker');\nconst onMessage = require('./onMessage');\nconst send = require('./send');\nconst loadImage = require('./loadImage');\n\nmodule.exports = {\n  defaultOptions,\n  spawnWorker,\n  terminateWorker,\n  onMessage,\n  send,\n  loadImage,\n};\n"],"names":["_typeof","module","exports","t","r","e","Symbol","toPrimitive","i","call","TypeError","String","Number","__esModule","AFR","AMH","ARA","ASM","AZE","AZE_CYRL","BEL","BEN","BOD","BOS","BUL","CAT","CEB","CES","CHI_SIM","CHI_TRA","CHR","CYM","DAN","DEU","DZO","ELL","ENG","ENM","EPO","EST","EUS","FAS","FIN","FRA","FRK","FRM","GLE","GLG","GRC","GUJ","HAT","HEB","HIN","HRV","HUN","IKU","IND","ISL","ITA","ITA_OLD","JAV","JPN","KAN","KAT","KAT_OLD","KAZ","KHM","KIR","KOR","KUR","LAO","LAT","LAV","LIT","MAL","MAR","MKD","MLT","MSA","MYA","NEP","NLD","NOR","ORI","PAN","POL","POR","PUS","RON","RUS","SAN","SIN","SLK","SLV","SPA","SPA_OLD","SQI","SRP","SRP_LATN","SWA","SWE","SYR","TAM","TEL","TGK","TGL","THA","TIR","TUR","UIG","UKR","URD","UZB","UZB_CYRL","VIE","YID","_objectSpread","require","version","defaultOptions","workerPath","concat","createWorker","recognize","async","image","langs","options","worker","finally","terminate","detect","handler","onmessage","_ref","data","readFromBlobOrFile","blob","Promise","resolve","reject","fileReader","FileReader","onload","result","onerror","target","error","code","Error","readAsArrayBuffer","loadImage","test","atob","split","map","c","charCodeAt","resp","fetch","arrayBuffer","HTMLElement","tagName","src","poster","toBlob","OffscreenCanvas","convertToBlob","File","Blob","Uint8Array","createScheduler","Tesseract","languages","OEM","PSM","setLogging","workerBlobURL","URL","type","Worker","createObjectURL","_objectWithoutProperties","_excluded","resolvePaths","createJob","log","getId","spawnWorker","terminateWorker","onMessage","send","workerCounter","arguments","length","undefined","oem","LSTM_ONLY","_options","config","id","_resolvePaths","logger","errorHandler","promises","currentLangs","currentOem","currentConfig","lstmOnlyCore","DEFAULT","includes","legacyCore","workerResReject","workerResResolve","workerRes","event","message","startJob","jobId","action","payload","promiseId","workerId","loadLanguageInternal","_langs","langPath","dataPath","cachePath","cacheMethod","gzip","lstmOnly","legacyLang","initializeInternal","_oem","_config","_ref2","status","userJobId","resolveObj","load","console","warn","writeText","path","text","method","args","readText","encoding","removeFile","FS","reinitialize","TESSERACT_ONLY","TESSERACT_LSTM_COMBINED","filter","x","push","then","setParameters","params","opts","output","corePath","logging","catch","jobCounter","_id","schedulerCounter","workers","runningWorkers","jobQueue","getNumWorkers","Object","keys","dequeue","wIds","queue","job","shift","w","apply","this","err","addWorker","addJob","_len","Array","_key","forEach","wid","getQueueLen","_this","_logging","resolveURL","s","window","location","href","key","prefix","cnt","Math","random","toString","slice","packet","postMessage","toPropertyKey","defineProperty","value","enumerable","configurable","writable","env","WorkerGlobalScope","document","process","o","iterator","constructor","prototype","OSD_ONLY","AUTO_OSD","AUTO_ONLY","AUTO","SINGLE_COLUMN","SINGLE_BLOCK_VERT_TEXT","SINGLE_BLOCK","SINGLE_LINE","SINGLE_WORD","CIRCLE_WORD","SINGLE_CHAR","SPARSE_TEXT","SPARSE_TEXT_OSD","RAW_LINE","objectWithoutPropertiesLoose","getOwnPropertySymbols","n","indexOf","propertyIsEnumerable","hasOwnProperty","ownKeys","getOwnPropertyDescriptor","getOwnPropertyDescriptors","defineProperties"],"sourceRoot":""}